name: ozmadb-py
on: push

jobs:
  build:
    name: Build
    permissions:
      contents: read
      id-token: write
      attestations: write
    outputs:
      artifact-id: ${{ steps.upload.outputs.artifact-id }}
      artifact-url: ${{ steps.upload.outputs.artifact-url }}
    defaults:
      run:
        working-directory: ./ozmadb-py
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load Cached Venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Dependencies
        run: |
          poetry install --with=dev --no-interaction --no-root
      - name: Check Formatting
        run: |
          poetry run ruff format --check .
      - name: Lint
        run: |
          poetry run ruff check .
      - name: Typecheck
        run: |
          poetry run pyright
      - name: Build
        run: |
          poetry build -f sdist
      - name: Upload Artifacts
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ozmadb-py
          path: ozmadb-py/dist
      # - name: Attest
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-path: out/ozmadb/**

  publish-release:
    name: Publish Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/p/ozmadb-py
    permissions:
      contents: write
      id-token: write
      attestations: write
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./ozmadb-py
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Release
        uses: actions/download-artifact@v4
        with: 
          name: ozmadb-py
          path: ozmadb-py/dist
      - name: Check the version
        env:
          REF: ${{ github.ref }}
        run: |
          rel_version=${REF#refs/tags/v}
          curr_version=$(yq -r .tool.poetry.version pyproject.toml)
          if [ "$rel_version" != "$curr_version" ]; then
            echo "Tag doesn't correspond to the project version. Expected '$rel_version', got '$curr_version'." >&2
            exit 1
          fi
          echo "Publishing version: $rel_version"
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ozmadb-py/dist
