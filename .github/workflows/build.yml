name: Build
on: push

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build
    outputs:
      artifact-id: ${{ steps.upload.outputs.artifact-id }}
      artifact-url: ${{ steps.upload.outputs.artifact-url }}
    steps:
      - name: Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore
        run: |
          dotnet restore --locked-mode -r linux-x64
      - name: Build Release
        run: |
          dotnet publish -o out/ozmadb -c Release -r linux-x64 OzmaDB/OzmaDB.fsproj
      - name: Upload Artifacts
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ozmadb
          path: |
            out/ozmadb
      - name: Attest
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: out/ozmadb/**

  publish:
    runs-on: ubuntu-22.04
    name: Publish
    if: github.repository == 'ozma-io/ozmadb' && github.ref == 'refs/heads/master'
    outputs:
      digest: ${{ steps.push.outputs.digest }}
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ozmaio/ozmadb
      - name: Download Release
        uses: actions/download-artifact@v4
        with:
          name: ozmadb
          path: out/ozmadb
      - name: Build a Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Attest
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ozmaio/ozmadb
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
